version: "3.5"

services:
  postgres:
    restart: unless-stopped
    image: postgres:${POSTGRES_VERSION:-13.6} # 14.2, 13.6, 12.10, 11.15 # replace with correct major version on existing installations, no alpine
    shm_size: 8gb
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-carp_mainnet}
      - POSTGRES_USER=${PGUSER:?Export PG username}
      - POSTGRES_PASSWORD=${PGPASSWORD:?Export PG password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_EXPOSED_PORT:-5432}:5432"

  carp:
    restart: unless-stopped
    build:
      context: ../
      dockerfile: Dockerfile
      target: carp
      args:
        - APP=/app
    image: carp:${CARP_VERSION}
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - DATABASE_URL=${DATABASE_URL}
      - RUST_BACKTRACE=full
    volumes:
      - type: bind
        source: ${CARDANO_NODE_SOCKET_PATH:-/root/cardano-node/node.socket}
        target: /node.socket
      - ./config/indexer/:/app/config/indexer:r
    entrypoint:
      - /bin/bash
      - -c
      - |
        /app/migration up ;
        /app/carp --config-path /app/config/indexer/${CONFIG_FILE:-oura_docker.yml} ;
    depends_on:
      - postgres

  # carp_web:
  #   restart: unless-stopped
  #   build:
  #     context: ../webserver/
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${CARP_WEB_EXPOSED_PORT:-3000}:3000"
  #   environment:
  #     - DATABASE_URL=${DATABASE_URL}
  #   networks:
  #     carp_network:
  #       ipv4_address: 172.20.0.6

volumes:
  postgres-data: {}
